<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>waku-core-protocol on Vac RFC</title>
    <link>https://rfc.vac.dev/tags/waku-core-protocol/</link>
    <description>Recent content in waku-core-protocol on Vac RFC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://rfc.vac.dev/tags/waku-core-protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>31/WAKU2-ENR</title>
      <link>https://rfc.vac.dev/spec/31/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rfc.vac.dev/spec/31/</guid>
      <description>Abstract # This RFC describes the usage of the ENR (Ethereum Node Records) format for 10/WAKU2 purposes. The ENR format is defined in EIP-778 [3].
This RFC is an extension of EIP-778, ENR used in Waku v2 MUST adhere to both EIP-778 and 31/WAKU2-ENR.
Motivation # EIP-1459 with the usage of ENR has been implemented [1] [2] as a discovery protocol for Waku v2.
EIP-778 specifies a number of pre-defined keys.</description>
    </item>
    
    <item>
      <title>35/WAKU2-NOISE</title>
      <link>https://rfc.vac.dev/spec/35/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rfc.vac.dev/spec/35/</guid>
      <description>This specification describes how payloads of Waku messages with version 2 can be encrypted in order to achieve confidentiality, authenticity, and integrity as well as some form of identity-hiding on communicating parties.
This specification extends the functionalities provided by 26/WAKU-PAYLOAD, adding support to modern symmetric encryption primitives and asymmetric key-exchange protocols.
Specifically, it adds support to the ChaChaPoly cipher for symmetric authenticated encryption. It further describes how the Noise Protocol Framework can be used to exchange cryptographic keys and encrypt/decrypt messages in a way that the latter are authenticated and protected by strong forward secrecy.</description>
    </item>
    
    <item>
      <title>37/WAKU2-NOISE-SESSIONS</title>
      <link>https://rfc.vac.dev/spec/37/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rfc.vac.dev/spec/37/</guid>
      <description>Introduction # In 35/WAKU2-NOISE we defined how Waku messages&amp;rsquo; payloads can be encrypted using key material derived from key agreements based on the Noise Protocol Framework.
Once two users complete a Noise handshake, an encryption/decryption session - or a Noise session - would be instantiated.
This post provides an overview on how we can possibly implement and manage one or multiple Noise sessions in Waku.
Preliminaries # We assume that two users, e.</description>
    </item>
    
  </channel>
</rss>
